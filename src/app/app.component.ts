import { AfterViewInit, Component } from '@angular/core';
import * as echarts from 'echarts';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html',
  styleUrls: ['./app.component.less']
})
export class AppComponent implements AfterViewInit {

  options = [{ name: '进水流量' }, { name: '出厂压力' }, { name: '出厂浊度' }, { name: '出厂余氯' }, { name: '出厂PH' }]
  lineData = [[40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,],
  [45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,],
  [40000, 41000, 42000, 45000, 41000, 42000, 45000, 50000, 40000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 40000, 41000,],
  [41000, 42000, 45000, 50000, 40000, 41000, 40000, 41000, 42000, 45000, 50000, 40000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,],
  [46900, 46000, 45000, 43000, 40000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,]]
  lineData2 = [[20000, 21000, 22000, 25000, 26000, 25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 20000, 21000, 22000, 25000, 26000, 25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 20000, 21000, 22000, 25000, 26000, 25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000,],
  [25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000,],
  [25000, 23000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 20000, 26000, 25000, 18000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 25000,],
  [20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 26000, 25000, 23000, 20000, 26000, 25000, 18000, 26900, 26000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 26000, 25000,],
  [23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000, 23000, 20000, 18000, 26900, 26000,],
  ]
  circleData = [{
    data: '47',
    color: '#009933',
    index: 1
  }, {
    data: '',
    color: '#ccc',
    index: 2
  }, {
    data: '48',
    color: '#009933',
    index: 3
  }, {
    data: '',
    color: '#f00',
    index: 4
  }, {
    data: '',
    color: '#ccc',
    index: 5
  }, {
    data: '',
    color: '#ccc',
    index: 6
  }, {
    data: 40,
    color: '#009933',
    index: 7
  }, {
    data: '',
    color: '#ccc',
    index: 8
  }, {
    data: '47',
    color: '#009933',
    index: 9
  },]

  chartsData = [
    {
      title:'第一水厂',
      id_line: 'line-one',
      y_line: {
        min: '20000',
        max: '60000'
      },
      series_line: {
        series1: [45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,],
        series2: [46900, 46000, 45000, 43000, 40000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000, 40000, 41000, 42000, 45000, 50000, 48000, 46900, 46000, 45000, 43000, 40000, 41000, 42000, 45000, 50000,]
      },
      id_bar: 'bar-one',
      series_bar: [3.67, 3.51, 3.66],
    },
    {
      title:'第二水厂',
      id_line: 'line-two',
      y_line: {
        min: '10000',
        max: '30000'
      },
      series_line: {
        series1: [25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000, 21000, 22000, 25000, 26000, 28000, 26900, 26000, 22000, 22000, 20000, 21000, 22000, 25000, 20000, 19000, 21000, 22000, 25000, 20000, 28000, 26900, 26000, 25000, 23000, 20000, 18000, 17000, 17500, 20000,],
        series2: [21000, 22000, 25000, 20000, 20000, 21000, 22000, 25000, 26000, 25000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000, 21000, 22000, 25000, 26000, 25000, 26000, 28000, 26900, 26000, 22000, 25000, 26000, 28000, 26900, 26000, 22000, 25000, 26000, 28000, 26900]
      },
      id_bar: 'bar-two',
      series_bar: [3.67, 3.51, 3.66],
    },
    {
      title:'第三水厂',
      id_line: 'line-three',
      y_line: {
        min: '10000',
        max: '30000'
      },
      series_line: {
        series1: [18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000, 21000, 22000, 25000, 26000, 22000, 25000, 26000, 28000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000, 21000, 22000, 25000, 26000, 25000, 26000, 28000, 26900,],
        series2: [20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 20000, 18000, 26900, 26000, 25000, 23000, 20000, 26000, 25000, 23000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000, 25000, 23000, 20000, 21000, 22000, 25000, 20000, 20000,]
      },
      id_bar: 'bar-three',
      series_bar: [3.67, 3.51, 3.66],
    }
  ]
  ngAfterViewInit(): void {
    this.initCharts(this.chartsData[0])
    this.initCharts(this.chartsData[1])
    this.initCharts(this.chartsData[2])
  }
  title = 'app';
  initCharts(chartsData, data1?, data2?) {
    const ec = echarts as any;
    let lineChart = ec.init(document.getElementById(chartsData.id_line));
    let lineOption = {
      xAxis: {
        data: ['0:00', '', '', '', '2:00', '', '', '', '4:00', '', '', '', '6:00', '', '', '', '8:00', '', '', '', '10:00', '', '', '', '12:00',
          '', '', '', '14:00', '', '', '', '16:00', '', '', '', '18:00', '', '', '', '20:00', '', '', '', '22:00', '', '', ''],
        axisLabel: {
          show: true,
          interval: 0,
        }

      },
      yAxis: {
        type: 'value',
        min: chartsData.y_line.min,
        max: chartsData.y_line.max,
        splitLine: false
      },
      grid: {
        // left: '0%',
        top:'12%',
        // bottom: '10%'
      },
      series: [
        {
          data: data1 || chartsData.series_line.series1,
          type: 'line',
        },
        {
          data: data2 || chartsData.series_line.series2,
          type: 'line',
        }
      ]
    };
    lineChart.setOption(lineOption);
    let barChart = ec.init(document.getElementById(chartsData.id_bar));
    let barOption = {
      xAxis: {
        data: ['', '', ''],
        axisLine: {
          show: false,
        },
        axisTick: {
          show: false,
        },

      },
      yAxis: {
        axisTick: {
          show: false,
        },
        axisLine: {
          show: false,
        },
        axisLabel: {
          show: false,
        },
        splitLine: false
      },
      color: [
        'rgba(129, 211, 248, 0.498039215686275)',
      ],
      grid: {
        left: '0%',
        top:'10%',
        bottom: '0%'
      },
      series: [
        {
          type: 'bar',
          data: chartsData.series_bar,
          itemStyle: {
            normal: {
              label: {
                show: true,
                position: 'inside',
                textStyle: {
                  color: 'black',
                  fontSize: 12
                }
              }
            }
          }
        }
      ]
    };
    barChart.setOption(barOption);
    // window.onresize = () => {
    //   lineChart.resize();
    //   barChart.resize();
    // };
    window.addEventListener("resize", function () {
      lineChart.resize();
      barChart.resize();
    });

  }
  changeData(sub_i, i) {
    if (i == 0) {
      this.initCharts(this.chartsData[0], this.lineData[sub_i], this.lineData[sub_i + 1])
    } else if (i == 1) {
      this.initCharts(this.chartsData[1], this.lineData2[sub_i], this.lineData2[sub_i + 1])
    }
    else if (i == 2) {
      this.initCharts(this.chartsData[2], this.lineData2[sub_i], this.lineData2[sub_i + 1])
    }
  }
}
